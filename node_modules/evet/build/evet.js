!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.evet=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var evet = {
	on : function(element, type, fn, useCapture) {
		element.addEventListener(type, fn, !!useCapture);
	},
	off : function(element, type, fn) {
		element.removeEventListener(type, fn);
	},
};

evet.delegate = (function() {
	var eventRegistry = {};
	
	function dispatchEvent(event) {
		var targetElement = event.target;
		eventRegistry[event.type].forEach(function(entry) {
			var potentialElements = document.querySelectorAll(entry.selector, entry.scope);
			var hasMatch = Array.prototype.indexOf.call(potentialElements, targetElement) >= 0;
			if (hasMatch) entry.fn.call(targetElement, event);
		});
	}

	return function(selector, type, fn, scope) {
		if (!eventRegistry[type]) {
			eventRegistry[type] = [];
			evet.on(document.documentElement, type, dispatchEvent, true);
		}
		eventRegistry[type].push({ selector: selector, fn: fn, scope: scope, });
	};

}());

module.exports = evet;
},{}]},{},[1])(1)
});