var evet = {
	on : function(element, type, fn, useCapture) {
		element.addEventListener(type, fn, !!useCapture);
	},
	off : function(element, type, fn) {
		element.removeEventListener(type, fn);
	},
};

evet.delegate = (function() {
	var eventRegistry = {};
	
	function dispatchEvent(event) {
		var targetElement = event.target;
		eventRegistry[event.type].forEach(function(entry) {
			var potentialElements = document.querySelectorAll(entry.selector, entry.scope);
			var hasMatch = Array.prototype.indexOf.call(potentialElements, targetElement) >= 0;
			if (hasMatch) entry.fn.call(targetElement, event);
		});
	}

	return function(selector, type, fn, scope) {
		if (!eventRegistry[type]) {
			eventRegistry[type] = [];
			evet.on(document.documentElement, type, dispatchEvent, true);
		}
		eventRegistry[type].push({ selector: selector, fn: fn, scope: scope, });
	};

}());

module.exports = evet;